/*
 * -------------------------------------------------
 *  nf-core/evoverse Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

// Global default params, used in configs
params {

  // Workflow flags
  // TODO nf-core: Specify your pipeline's command line flags
  publish_dir = "$baseDir/results"
  outdir = "$baseDir/results"
  input = "$baseDir/test_input.csv"

  genome = "GRCh37"
  fasta = "/orfeo/LTS/CDSLab/LT_storage/ref_genomes/BGI/GCA_000001405.14_GRCh37.p13_no_alt_analysis_set.fna"

  mode = "single_sample"
  tools = null // No default Subclonal deconvolution tool

  publish_dir_mode = 'copy'
  // VAF deconvolution - general
  remove_tail = "never"
  
  // Boilerplate options
  name = false
  email = false
  email_on_fail = false
  plaintext_email = false
  monochrome_logs = false
  help = false
  igenomes_base = 's3://ngi-igenomes/igenomes/'
  tracedir = "${params.outdir}/pipeline_info"
  igenomes_ignore = false
  custom_config_version = 'master'
  custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
  hostnames = false
  config_profile_description = false
  config_profile_contact = false
  config_profile_url = false

  // Defaults only, expecting to be overwritten
  max_memory = 128.GB
  max_cpus = 16
  max_time = 240.h

}

// Container slug. Stable releases should specify release tag!
// Developmental code should specify :dev
process.container = 'nfcore/tumourevo:dev'

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'
includeConfig 'conf/params.config'
includeConfig 'conf/modules/ensemblvep.config'
includeConfig 'conf/modules/formatter.config'
includeConfig 'conf/modules/lifter.config'
includeConfig 'conf/modules/cnaqc.config'
includeConfig 'conf/modules/driver_annotation.config'
includeConfig 'conf/modules/pyclonevi.config'
includeConfig 'conf/modules/viber.config'
includeConfig 'conf/modules/mobsterh.config'

// Load nf-core custom profiles from different Institutions
try {
  includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
  System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

plugins {
  id 'nf-schema@2.0.0'
}

profiles {
  conda { process.conda = "${baseDir}/environment.yml" }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker {
    docker.enabled = true
    // Avoid this error:
    //   WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behavior as new default.
    docker.runOptions = '-u \$(id -u):\$(id -g)'
  }
  singularity {
    singularity.enabled = true
    singularity.autoMounts = true
    singularity.envWhitelist = ["SINGULARITY_TMPDIR"]
    singularity.runOptions = '--bind /orfeo:/orfeo --bind $SINGULARITY_TMPDIR:/tmp'
  }
  test {
    includeConfig 'conf/test.config'
  }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
  includeConfig 'conf/igenomes.config'
}

// Export this variable to prevent local Python libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
  timeline.overwrite = true
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
  report.overwrite = true
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
  trace.overwrite = true
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
  dag.overwrite = true
}

manifest {
  name = 'nf-core/evoverse'
  author = 'Nicola Calonaci, Elena Buscaroli, Katsiaryna Davydzenka, Giorgia Gandolfi, Virginia Gazziero, Asad Sadr, Lucrezia Valeriani and Giulio Caravagna'
  homePage = 'https://github.com/nf-core/evoverse'
  description = 'Analysis pipleine to model tumour clonal evolution from WGS data (driver annotation, quality control of copy number calls, subclonal and mutational signature deconvolution)'
  mainScript = 'main.nf'
  nextflowVersion = '>=19.10.0'
  version = '1.0dev'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
