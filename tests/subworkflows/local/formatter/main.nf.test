nextflow_workflow {

    name "Test Workflow FORMATTER"

    script "subworkflows/local/formatter/main.nf"
    workflow "FORMATTER"

    test("Run without failures for vcf") {

        when {
            workflow {
                """
                meta = [
                    id : "MSeq_Set06_Set6_42",
                    dataset : "MSeq",
                    patient : "Set06",
                    tumour_sample: "Set6_42",
                    normal_sample: "54_N",
                    cancer_type: "PANCANCER" 
                ]
                
                vcf = file("${projectDir}/results/variant_annotation/vep/MSeq/Set06/Set6_42/MSeq_Set06_Set6_42.vcf.gz", checkIfExists: true)
                tbi = file("${projectDir}/results/variant_annotation/vep/MSeq/Set06/Set6_42/MSeq_Set06_Set6_42.vcf.gz.tbi", checkIfExists: true)
                // Create a tuple with metadata and file path
                input[0] = tuple(meta, vcf, tbi)
                input[1] = "vcf"
                """
            }
        }

        then {
            assert workflow.success
            //assert snapshot(workflow.out).match()
        }
    
    }

    //Second test on the same workflow
    // test("Run without failures for cna") {

    //     when {
    //         workflow {
    //             """
    //             meta = [
    //                 id : "MSeq_Set06_Set6_42",
    //                 dataset : "MSeq",
    //                 patient : "Set06",
    //                 tumour_sample: "Set6_42",
    //                 cancer_type: "PANCANCER" ,
    //                 cna_caller : "sequenza"
    //             ]
    //             cna_segs = file("${projectDir}/test_input/Set6_42.smoothedSegs_sequenza.txt", checkIfExists: true)
    //             cna_extra = file("${projectDir}/test_input/Set6_42_confints_CP_sequenza.txt", checkIfExists: true)

    //             input[0] = Channel.fromList([meta, [cna_segs, cna_extra]])
    //             input[1] = "cna"
    //             """
    //         }
    //     }

    //     then {
    //         assert workflow.success
    //         //assert snapshot(workflow.out).match()
    //     }


    // }

    //Third test on the same workflow
    test("Run without failures for rds") {

        when {
            workflow {
                """
                meta = [
                    id : "MSeq_Set06_Set6_42",
                    dataset : "MSeq",
                    patient : "Set06",
                    tumour_sample: "Set6_42",
                    normal_sample: "54_N",
                    cancer_type: "PANCANCER" 
                ]
                joinCNAqc_rds = file("${projectDir}/results/QC/join_CNAqc/MSeq/Set06/MSeq_Set06_multi_cnaqc.rds", checkIfExists: true)
                tumor_samples = "Set6_42"
                input[0] = tuple(meta, joinCNAqc_rds, tumor_samples)
                input[1] = "rds"
                """
            }
        }

        then {
            assert workflow.success
            //assert snapshot(workflow.out).match()
        }
    
    }

}